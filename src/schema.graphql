### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Feed {
  count: Int!
  id: ID
  links: [Link!]!
}

type Link {
  description: String!
  id: Int!
  postedBy: User
  url: String!
  voters: [User!]!
}

input LinkOrderByInput {
  description: Sort
  url: Sort
}

type Mutation {
  login(email: String!, password: String!): AuthPayload!
  post(description: String!, url: String!): Link!
  signup(email: String!, name: String!, password: String!): AuthPayload!
  vote(linkId: Int!): Vote
}

type Query {
  feed(filter: String, orderBy: [LinkOrderByInput!], skip: Int, take: Int): Feed!
}

enum Sort {
  asc
  desc
}

type User {
  email: String!
  id: Int!
  links: [Link!]!
  name: String!
  votes: [Link!]!
}

type Vote {
  link: Link!
  user: User!
}